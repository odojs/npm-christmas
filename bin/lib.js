// Generated by CoffeeScript 1.7.1
(function() {
  var args, atleastone, content, d, dependency, dir, dirpath, exists, packagecontent, packagedir, packagefile, path, resolve, stat, technique, usage, write, _i, _len, _ref, _ref1;

  require('colors');

  args = process.argv.slice(2);

  usage = "\n   Usage: " + 'npm-christmas'.cyan + " [wrap or unwrap] (defaults to unwrap)\n   \n   unwrap: Your package.json file will have it's dependency versions replaced with *\n   wrap: Your package.json file will pick up versions from your currently installed packages\n   \n   Use npm shrinkwrap for a more robust wrap\n";

  if (args.length > 2) {
    console.error(usage);
    process.exit(1);
  }

  if (args.length === 1 && !((_ref = args[0]) === 'wrap' || _ref === 'unwrap')) {
    console.error(usage);
    process.exit(1);
  }

  technique = 'unwrap';

  if (args.length === 1) {
    technique = args[0];
  }

  exists = require('fs').existsSync;

  resolve = require('path').resolve;

  write = require('fs').writeFileSync;

  path = resolve(process.cwd(), 'package.json');

  if (!exists(path)) {
    console.error('   Expecting package.json in the current directory'.red);
    console.error();
    process.exit(1);
  }

  content = require(path);

  if (content == null) {
    console.error();
    console.error('   Expecting package.json in the current directory'.red);
    console.error();
    process.exit(1);
  }

  if (content.dependencies == null) {
    console.log();
    console.log('   No dependencies in package.json'.cyan);
    console.log();
    process.exit(0);
  }

  if (technique === 'wrap') {
    dirpath = resolve(process.cwd(), 'node_modules');
    if (!exists(path)) {
      console.log();
      console.log('   No node_modules directory'.cyan);
      console.log();
      process.exit(0);
    }
    console.log();
    dir = require('fs').readdirSync;
    stat = require('fs').statSync;
    atleastone = false;
    _ref1 = dir(dirpath);
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      d = _ref1[_i];
      packagedir = resolve(dirpath, d);
      if (stat(packagedir).isDirectory()) {
        packagefile = resolve(packagedir, 'package.json');
        if (!exists(packagefile)) {
          continue;
        }
        packagecontent = require(packagefile);
        if ((packagecontent == null) || (packagecontent.name == null) || (packagecontent.version == null)) {
          continue;
        }
        if (content.dependencies[packagecontent.name] != null) {
          if (content.dependencies[packagecontent.name] === packagecontent.version) {
            continue;
          }
          content.dependencies[packagecontent.name] = packagecontent.version;
          console.log((" √ Locking " + packagecontent.name + " to " + packagecontent.version).green);
          atleastone = true;
        }
      }
    }
    if (!atleastone) {
      console.log('   No presents needed wrapping'.cyan);
      console.log();
      process.exit(0);
    }
    write(path, JSON.stringify(content, null, 2));
    console.log();
    console.log('   Presents wrapped');
    console.log();
    return;
  }

  atleastone = false;

  console.log();

  for (dependency in content.dependencies) {
    if (content.dependencies[dependency] === '*') {
      continue;
    }
    console.log((" √ Releasing " + dependency + " from " + content.dependencies[dependency] + " to *").green);
    content.dependencies[dependency] = '*';
    atleastone = true;
  }

  if (!atleastone) {
    console.log('   No presents needed unwrapping'.cyan);
    console.log();
    process.exit(0);
  }

  write(path, JSON.stringify(content, null, 2));

  console.log();

  console.log('   Presents unwrapped');

  console.log();

}).call(this);
